{"version":3,"sources":["App.js","art.js","index.js"],"names":["artFunctions","canvas","tick","mod","ctx","getContext","strokeStyle","beginPath","i","angle","x","Math","cos","y","sin","lineTo","width","height","stroke","tan","start","PI","end","arc","artFunctionsNames","map","func","name","App","useState","currentFunctionID","setCurrentFunctionID","navButtonClicked","change","newFunctionID","length","useEffect","document","getElementById","intervalId","setInterval","clearRect","clearInterval","className","onClick","id","ReactDOM","render"],"mappings":"qOAQMA,G,MAAe,CCRI,SAACC,EAAQC,GAC9B,IAAMC,EAAMD,EAAO,IAAS,IACxBE,EAAMH,EAAOI,WAAW,MAC5BD,EAAIE,YAAc,OAClBF,EAAIG,YACJ,IAAK,IAAIC,EAAI,EAAGA,EAAI,IAAKA,IAAK,CAC1B,IAAIC,EAAQN,EAAMK,EACdE,EAAID,EAAQE,KAAKC,IAAIH,GAAS,GAC9BI,EAAIJ,EAAQE,KAAKG,IAAIL,GAAS,GAClCL,EAAIW,OAAOd,EAAOe,MAAQ,EAAIN,EAAGT,EAAOgB,OAAS,EAAIJ,GAEzDT,EAAIc,UAGiB,SAACjB,EAAQC,GAC9B,IAAMC,EAAMD,EAAO,IAAS,IACxBE,EAAMH,EAAOI,WAAW,MAC5BD,EAAIG,YACJH,EAAIE,YAAc,UAClB,IAAK,IAAIE,EAAI,EAAGA,EAAI,IAAMA,IAAK,CAC3B,IAAIC,EAAQN,EAAMK,EAAIG,KAAKC,IAAI,IAC3BF,EAAID,EAAQE,KAAKG,KAAKL,GAASE,KAAKC,IAAIH,IAAU,GAClDI,EAAIJ,EAAQE,KAAKQ,IAAIV,GAASE,KAAKG,KAAKL,GAAS,GACrDL,EAAIW,OAAOd,EAAOe,MAAQ,EAAIN,EAAI,EAAGT,EAAOgB,OAAS,EAAIJ,GAE7DT,EAAIc,UAGsB,SAACjB,EAAQC,GACnC,IAAMC,EAAMD,EAAO,IAEfE,EAAMH,EAAOI,WAAW,MAC5BD,EAAIG,YACJ,IAAMa,EAAQjB,EAAMQ,KAAKU,GACnBC,GAAOnB,EAAM,IAAOQ,KAAKU,GAC/BjB,EAAImB,IAAItB,EAAOe,MAAQ,EAAGf,EAAOgB,OAAS,EALvB,GAKsCG,EAAOE,GAChElB,EAAIc,YD3BFM,EAAoBxB,EAAayB,KAAI,SAAAC,GAAI,OAAIA,EAAKC,QAqCzCC,EAnCH,WAAO,IAAD,EACoCC,mBAAS,GAD7C,mBACPC,EADO,KACYC,EADZ,KAGRC,EAAmB,SAACC,GACtB,IAAIC,EAAgBJ,EAAoBG,EAExCC,GADAA,GAAgClC,EAAamC,QACb,EAAInC,EAAamC,OAAS,EAAID,EAC9DH,EAAqBG,IAezB,OAZAE,qBAAU,WACN,IAAInC,EAASoC,SAASC,eAAe,UACjClC,EAAMH,EAAOI,WAAW,MACxBG,EAAI,EACF+B,EAAaC,aAAY,WAC3BpC,EAAIqC,UAAU,EAAG,EAAGxC,EAAOe,MAAOf,EAAOgB,QACzCT,GAAK,EACLR,EAAa8B,GAAmB7B,EAAQO,KACzC,IACH,OAAO,kBAAMkC,cAAcH,MAC5B,CAACT,IAGA,sBAAKa,UAAU,MAAf,UACI,6BAAKnB,EAAkBM,KACvB,sBAAKa,UAAU,UAAf,UACI,wBAAQA,UAAU,UAAUC,QAAS,kBAAIZ,GAAkB,IAA3D,sBACA,wBAAQa,GAAG,SAAS7B,MAAM,MAAMC,OAAO,QACvC,wBAAQ0B,UAAU,UAAUC,QAAS,kBAAIZ,EAAiB,IAA1D,qBAEJ,+BAAKF,EAAoB,EAAzB,MAA+B9B,EAAamC,OAA5C,W,MEpCZW,IAASC,OAAO,cAAC,EAAD,IAASV,SAASC,eAAe,W","file":"static/js/main.8f9514c7.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\n\n\nimport {\n    spiralOne, spiralTwo, rotatingString\n} from \"./art\";\n\nconst artFunctions = [spiralOne, spiralTwo, rotatingString];\nconst artFunctionsNames = artFunctions.map(func => func.name);\n\nconst App = () => {\n    const [currentFunctionID, setCurrentFunctionID] = useState(0);\n\n    const navButtonClicked = (change) => {\n        let newFunctionID = currentFunctionID + change;\n        newFunctionID = newFunctionID % artFunctions.length;\n        newFunctionID = newFunctionID < 0 ? artFunctions.length - 1 : newFunctionID;\n        setCurrentFunctionID(newFunctionID);\n    }\n\n    useEffect(() => {\n        var canvas = document.getElementById(\"canvas\");\n        var ctx = canvas.getContext(\"2d\");\n        let i = 0;\n        const intervalId = setInterval(() => {\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\n            i += 1;\n            artFunctions[currentFunctionID](canvas, i);      \n        }, 10);\n        return(() => clearInterval(intervalId));\n    }, [currentFunctionID]);\n\n    return (\n        <div className=\"app\">\n            <h3>{artFunctionsNames[currentFunctionID]}</h3>\n            <div className=\"display\">\n                <button className=\"nav-btn\" onClick={()=>navButtonClicked(-1)}>Previous</button>\n                <canvas id=\"canvas\" width=\"300\" height=\"300\" />\n                <button className=\"nav-btn\" onClick={()=>navButtonClicked(1)}>Next</button>\n            </div>\n            <h3>{currentFunctionID + 1} / {artFunctions.length} </h3>\n        </div>\n    );\n};\n\nexport default App;\n","export const spiralOne = (canvas, tick) => {\n    const mod = tick / 100000 + 4.5;\n    var ctx = canvas.getContext(\"2d\");\n    ctx.strokeStyle = \"#ccc\";\n    ctx.beginPath();\n    for (let i = 0; i < 720; i++) {\n        let angle = mod * i;\n        let x = angle * Math.cos(angle) * 0.1;\n        let y = angle * Math.sin(angle) * 0.1;\n        ctx.lineTo(canvas.width / 2 + x, canvas.height / 2 + y);\n    }\n    ctx.stroke();\n}\n\nexport const spiralTwo = (canvas, tick) => {\n    const mod = tick / 100000 + 4.5;\n    var ctx = canvas.getContext(\"2d\");\n    ctx.beginPath();\n    ctx.strokeStyle = \"#5d7ec3\";\n    for (let i = 0; i < 1000; i++) {\n        let angle = mod * i * Math.cos(0.1);\n        let x = angle * Math.sin(-angle) * Math.cos(angle) * -0.1;\n        let y = angle * Math.tan(angle) * Math.sin(-angle) / 50;\n        ctx.lineTo(canvas.width / 2 + x / 2, canvas.height / 2 + y);\n    }\n    ctx.stroke();\n}\n\nexport const rotatingString = (canvas, tick) => {\n    const mod = tick / 100;\n    const circleSize = 60;\n    var ctx = canvas.getContext(\"2d\");\n    ctx.beginPath();\n    const start = mod * Math.PI;\n    const end = (mod + 0.5) * Math.PI;\n    ctx.arc(canvas.width / 2, canvas.height / 2, circleSize, start, end);\n    ctx.stroke();\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}